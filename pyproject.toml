[project]
name = "htmlfmt"
description = "An html formatter"
readme = "README.md"
authors = [
    {name = "Aarush Deshpande", email = "do-not-reply@gmail.com"},
]
requires-python = ">=3.8"
version = "1.0"
dynamic = ["dependencies"]
license = { file = "LICENSE" }

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project.scripts]
# setuptools autoinstalls src/*
htmlfmt = "htmlfmt:main"

[tool.ruff]
extend-exclude = [
  ".github",
  ".env",
  "env",
  "secret",
  "media",
  "migrations",
]

show-fixes = false

line-length = 100

target-version = "py38"

[tool.ruff.lint]
select = [
    # flake8-bugbear
    "B",
    # flake8-blind-except
    "BLE",
    # flake8-comprehensions
    "C4",
    # pydocstyle
    "D",
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # flake8-boolean-trap
    "FBT",
    # isort
    "I",
    # flake8-no-pep420
    "INP",
    # pep8-naming
    "N",
    # Pylint
    "PL",
    # pygrep hooks
    "PGH",
    # ruff
    "RUF",
    # pyupgrade
    "UP",
]
ignore = [
  # branching
  "PLR09",
  # magic number comparison
  "PLR2004",
  # mutable class attrs annotated as typing.ClassVar
  "RUF012",
  # missing docstring
  "D1",
  # as recommended by https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
  "E111",
  "E114",
  "E117",
  "E501",
  "D206",
  "D300",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false
parametrize-names-type = "tuple"
parametrize-values-type = "tuple"

[tool.ruff.lint.pep8-naming]
extend-ignore-names = [
  "User",
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = [
  "F401",
  "F403",
]

"*test*" = [
  "FBT",
]

[tool.ruff.format]
docstring-code-format = true
line-ending = "lf"

[tool.codespell]
write-changes = true
ignore-words-list = ""
